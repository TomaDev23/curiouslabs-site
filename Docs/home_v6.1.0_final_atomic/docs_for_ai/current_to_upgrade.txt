/**
 * @metadata
 * @component HorizontalProductScrollV6
 * @description Unified horizontal scroll section with AEGIS intro, Products carousel, and Services outro
 * @legit true
 * @version 2.0.0
 * @author CuriousLabs
 * @scs SCS5
 * @doc contract_horizontal_product_scroll_v6.md
 */

import React, { useState, useEffect, useRef } from 'react';
import { motion } from 'framer-motion';

// Product data for the carousel
const OPS_BENTO_ITEMS = [
  {
    id: 1,
    title: 'OPSPipe',
    summary: 'AI-powered operations stack',
    features: [
      'Document parsing & classification',
      'Human-in-the-loop approval',
      'Telemetry + audit trace',
    ],
    tagline: 'Office-in-your-pocket with full control',
    backContent: 'Automate workflows with AI precision and scale seamlessly.',
    illustrationSrc: '/assets/images/planets/4k/Galaxy_1_v6.JPG',
    accentColor: '#84cc16', // Lime
  },
  {
    id: 2,
    title: 'Guardian',
    summary: 'Emotional AI for children',
    features: [
      'Creative presence instead of screen addiction',
      'Gentle nudging through games, stories, and art',
      'Grows with the child',
    ],
    tagline: 'The screen friend that protects, not distracts',
    backContent: 'Nurture creativity with an AI that cares and adapts.',
    illustrationSrc: '/assets/images/planets/4k/Galaxy_1_v6.JPG',
    accentColor: '#d946ef', // Magenta
  },
  {
    id: 3,
    title: 'MoonSignal',
    summary: 'Quant bot logic redefined',
    features: [
      'Strategy modular blocks',
      'Chart-driven automation',
      'Risk scoring + fallback logic',
    ],
    tagline: 'Smarter signals for faster action',
    backContent: 'Trade smarter with AI-driven insights and real-time data.',
    illustrationSrc: '/assets/images/planets/4k/Galaxy_1_v6.JPG',
    accentColor: '#22d3ee', // Cyan
  },
  {
    id: 4,
    title: 'Curious',
    summary: 'A relational AI presence',
    features: [
      'Synthesized memory',
      'Personality layers',
      'Feels like it "knows you"',
    ],
    tagline: 'Emotional AI for real connection',
    backContent: 'Your AI companion that truly understands and evolves with you.',
    illustrationSrc: '/assets/images/planets/4k/Galaxy_1_v6.JPG',
    accentColor: '#84cc16', // Lime
  },
];

// Animation variants for page transitions
const pageVariants = {
  initial: { x: '100vw', opacity: 0, scale: 0.9 },
  animate: { x: 0, opacity: 1, scale: 1, transition: { duration: 0.8, ease: 'easeOut' } },
  exit: { x: '-100vw', opacity: 0, scale: 0.9, transition: { duration: 0.8, ease: 'easeIn' } },
};

// Text reveal animations
const textVariants = {
  hidden: { opacity: 0, y: 20 },
  visible: (i) => ({
    opacity: 1,
    y: 0,
    transition: { duration: 0.5, delay: i * 0.3, ease: 'easeOut' },
  }),
};

// Particle animation
const particleVariants = {
  animate: {
    y: [0, -10, 0],
    opacity: [0, 1, 0],
    transition: { duration: 2, repeat: Infinity, repeatDelay: Math.random() * 3 },
  },
};

// Shooting star animation
const shootingStarVariants = {
  animate: {
    x: ['100vw', '-100vw'],
    y: ['-10vh', '110vh'],
    opacity: [0, 1, 0],
    transition: { duration: 3, repeat: Infinity, repeatDelay: Math.random() * 10 + 5 },
  },
};

// Nebula animation
const nebulaVariants = {
  animate: {
    scale: [1, 1.05, 1],
    opacity: [0.1, 0.2, 0.1],
    transition: { duration: 15, repeat: Infinity, ease: 'easeInOut' },
  },
};

// Card animation variants
const cardVariants = {
  hidden: { opacity: 0, y: 20, scale: 0.95 },
  visible: { opacity: 1, y: 0, scale: 1, transition: { duration: 0.5 } },
  hover: { scale: 1.05, boxShadow: '0 0 20px rgba(255,255,255,0.3)' },
  active: { scale: 1.1, boxShadow: '0 0 30px rgba(255,255,255,0.5)' },
};

// Flip animation for cards
const flipVariants = {
  front: { rotateY: 0, transition: { duration: 0.4 } },
  back: { rotateY: 180, transition: { duration: 0.4 } },
};

// Reduced motion hook
const useReducedMotion = () => {
  const [prefersReducedMotion, setPrefersReducedMotion] = useState(false);

  useEffect(() => {
    const mediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)');
    setPrefersReducedMotion(mediaQuery.matches);
    const handleChange = () => setPrefersReducedMotion(mediaQuery.matches);
    mediaQuery.addEventListener('change', handleChange);
    return () => mediaQuery.removeEventListener('change', handleChange);
  }, []);

  return prefersReducedMotion;
};

// AEGIS Page
const AegisPage = () => {
  const prefersReducedMotion = useReducedMotion();

  return (
    <div className="relative w-screen h-screen flex items-start justify-start px-8 lg:px-16 pt-20 overflow-hidden">
      {/* Cosmic Background */}
      <motion.div
        className="absolute inset-0"
        style={{
          background: 'linear-gradient(135deg, #0f172a, #1e293b, #84cc16 10%)',
          backgroundSize: '200% 200%',
        }}
        animate={{ backgroundPosition: ['0% 0%', '100% 100%'] }}
        transition={{ duration: 20, repeat: Infinity }}
      />
      {/* Nebula Effect */}
      <motion.div
        className="absolute inset-0 opacity-20"
        style={{
          background: 'radial-gradient(circle at 30% 30%, #84cc16, transparent 50%)',
          filter: 'blur(50px)',
        }}
        variants={nebulaVariants}
        animate="animate"
      />
      {/* Particles and Shooting Stars */}
      {[...Array(10)].map((_, i) => (
        <motion.div
          key={`particle-${i}`}
          className="absolute w-1 h-1 bg-white rounded-full"
          style={{ top: `${Math.random() * 100}%`, left: `${Math.random() * 100}%` }}
          variants={particleVariants}
          animate="animate"
        />
      ))}
      {[...Array(2)].map((_, i) => (
        <motion.div
          key={`star-${i}`}
          className="absolute w-1 h-1 bg-white rounded-full"
          variants={shootingStarVariants}
          animate="animate"
        />
      ))}
      {/* Content */}
      <div className="relative z-10 max-w-lg">
        {/* Floating AEGIS Logo */}
        <motion.div
          className="absolute -top-12 -left-12 w-32 h-32"
          animate={{ y: [0, -10, 0], rotate: [0, 5, 0] }}
          transition={{ duration: 5, repeat: Infinity }}
        >
          <img src="/assets/images/aegis-logo.png" alt="AEGIS Logo" className="w-full h-full" onError={(e) => (e.target.src = '/assets/images/placeholder.png')} />
        </motion.div>
        {/* Header */}
        <motion.h2
          className="text-5xl lg:text-6xl font-bold uppercase tracking-wide"
          style={{ color: '#84cc16', textShadow: '0 0 12px #84cc1680' }}
          variants={textVariants}
          initial="hidden"
          animate="visible"
          custom={0}
        >
          AEGIS Runtime
        </motion.h2>
        <motion.p
          className="text-xl lg:text-2xl font-medium text-white/80 mt-4"
          variants={textVariants}
          initial="hidden"
          animate="visible"
          custom={1}
        >
          The smart core powering everything we build.
        </motion.p>
        {/* Subheader */}
        <motion.h3
          className="text-2xl lg:text-3xl font-semibold text-cyan-400 mt-6"
          style={{ color: '#22d3ee', textShadow: '0 0 8px #22d3ee80' }}
          variants={textVariants}
          initial="hidden"
          animate="visible"
          custom={2}
        >
          Adaptive. Auditable. Alive.
        </motion.h3>
        <motion.p
          className="text-base lg:text-lg text-white/70 mt-2 mb-8"
          variants={textVariants}
          initial="hidden"
          animate="visible"
          custom={3}
        >
          AEGIS is the thinking engine behind CuriousLabs — a precision system built to orchestrate AI, logic, and control across all products.
        </motion.p>
        {/* Story Block */}
        <motion.div
          className="text-sm lg:text-base text-white/90 leading-relaxed mb-8"
          variants={textVariants}
          initial="hidden"
          animate="visible"
          custom={4}
        >
          <p>
            At the heart of CuriousLabs is AEGIS — our internal operating system for intelligence. It’s not just infrastructure. It’s a mindset: modular, auditable, and relentlessly efficient.
          </p>
          <p className="mt-4">
            Everything we ship — from OpsPipe to MoonSignal — flows through AEGIS. It connects agents, manages states, logs every decision, and ensures that what we build isn't just smart — it's traceable, resilient, and future-proof.
          </p>
          <p className="mt-4 italic">
            AEGIS doesn't guess. It thinks, tracks, and adapts — like an AI command brain, always alert, always aligned.
          </p>
        </motion.div>
        {/* Bullet Points */}
        <ul className="space-y-4">
          {[
            { text: 'Multi-Agent Architecture', subtext: 'Built to orchestrate real AI agents in parallel — with roles, memory, and autonomy baked in.' },
            { text: 'State Machine Control', subtext: 'Every phase, every change, every command is governed by a central mission engine.' },
            { text: 'Traceable by Design', subtext: 'Generates logs, metrics, and trace.json for every execution step — audit-first protocol.' },
            { text: 'Modular Logic, Zero Bloat', subtext: 'Inject only what you need — from parsers to planners. AEGIS scales sideways, not bloated up.' },
            { text: 'LEGIT Compliant Core', subtext: "Designed from day one to enforce CuriousLabs' atomic rules, structure, and layout contracts." },
          ].map((item, index) => (
            <motion.li
              key={index}
              className="flex items-start"
              variants={textVariants}
              initial="hidden"
              animate="visible"
              custom={5 + index}
            >
              <span className="w-3 h-3 rounded-full mr-3 mt-1.5" style={{ backgroundColor: '#84cc16' }} />
              <div>
                <span className="text-white/90 font-medium">{item.text}</span>
                <p className="text-white/60 text-sm">{item.subtext}</p>
              </div>
            </motion.li>
          ))}
        </ul>
      </div>
    </div>
  );
};

// Products Page (OpsBentoCluster logic embedded)
const ProductsPage = () => {
  const [activeIndex, setActiveIndex] = useState(0);
  const prefersReducedMotion = useReducedMotion();
  const carouselRef = useRef(null);

  useEffect(() => {
    if (prefersReducedMotion) return;

    const rotationInterval = setInterval(() => {
      setActiveIndex((prev) => (prev + 1) % OPS_BENTO_ITEMS.length);
    }, 5000);

    return () => clearInterval(rotationInterval);
  }, [prefersReducedMotion]);

  const BentoItem = ({ item, isActive }) => (
    <motion.div
      className="relative w-80 h-[80vh] rounded-2xl overflow-hidden backdrop-blur-sm border border-white/20 flex-shrink-0"
      style={{ background: 'linear-gradient(135deg, rgba(15, 23, 42, 0.8), rgba(30, 41, 59, 0.6))' }}
      variants={cardVariants}
      initial="hidden"
      animate={isActive ? 'active' : 'visible'}
      whileHover="hover"
      onClick={() => setActiveIndex(item.id - 1)}
    >
      {/* Pulsating Glow Border */}
      <motion.div
        className="absolute inset-0 rounded-2xl border border-transparent pointer-events-none"
        animate={{
          borderColor: isActive ? `${item.accentColor}cc` : 'rgba(255,255,255,0.2)',
          boxShadow: isActive
            ? `inset 0 0 20px ${item.accentColor}60, 0 0 30px ${item.accentColor}30`
            : 'inset 0 0 5px rgba(255,255,255,0.1)',
        }}
        transition={{ duration: 0.3 }}
      />
      {/* Content */}
      <motion.div
        className="relative w-full h-full p-6 flex flex-col justify-between"
        style={{ transformStyle: 'preserve-3d' }}
        animate={isActive && !prefersReducedMotion ? 'back' : 'front'}
        variants={flipVariants}
      >
        {/* Front Side */}
        <div className="absolute inset-0 flex flex-col justify-between" style={{ backfaceVisibility: 'hidden' }}>
          {/* Galaxy Illustration */}
          <motion.div
            className="relative w-20 h-20 mx-auto"
            animate={{ rotate: 360 }}
            transition={{ duration: 20, repeat: Infinity, ease: 'linear' }}
          >
            <motion.div
              className="absolute inset-0 rounded-full"
              animate={{ boxShadow: isActive ? `0 0 20px ${item.accentColor}80` : `0 0 10px ${item.accentColor}40` }}
              transition={{ duration: 0.3 }}
            />
            <img
              src={item.illustrationSrc}
              alt={`${item.title} galaxy illustration`}
              className="w-full h-full object-cover rounded-full"
              onError={(e) => (e.target.src = '/assets/images/placeholder.png')}
            />
          </motion.div>
          {/* Header */}
          <div className="text-center">
            <h3
              className="text-2xl font-bold uppercase tracking-wide"
              style={{ color: item.accentColor, textShadow: `0 0 12px ${item.accentColor}80` }}
            >
              {item.title}
            </h3>
            <p className="text-sm font-medium text-white/80 mt-2">{item.summary}</p>
          </div>
          {/* Features */}
          <ul className="mt-6 space-y-3">
            {item.features.map((feature, index) => (
              <li key={index} className="flex items-start">
                <span
                  className="w-4 h-4 mr-3 mt-1 rounded-full"
                  style={{ backgroundColor: `${item.accentColor}40` }}
                />
                <span className="text-sm font-medium text-white/90">{feature}</span>
              </li>
            ))}
          </ul>
          {/* Tagline */}
          <p className="mt-6 text-sm italic text-white/60 text-center">{item.tagline}</p>
        </div>
        {/* Back Side */}
        <div
          className="absolute inset-0 p-6 flex flex-col items-center justify-center bg-gradient-to-br from-slate-900/80 to-slate-950/60"
          style={{ backfaceVisibility: 'hidden', transform: 'rotateY(180deg)' }}
        >
          <motion.div
            className="relative w-16 h-16 mb-4"
            animate={{ rotate: -360 }}
            transition={{ duration: 20, repeat: Infinity, ease: 'linear' }}
          >
            <img
              src={item.illustrationSrc}
              alt={`${item.title} galaxy illustration`}
              className="w-full h-full object-cover rounded-full opacity-80"
            />
          </motion.div>
          <p className="text-base font-medium text-white text-center" style={{ textShadow: `0 0 12px ${item.accentColor}60` }}>
            {item.backContent}
          </p>
        </div>
      </motion.div>
    </motion.div>
  );

  return (
    <div className="relative w-screen h-screen flex items-center justify-center overflow-hidden">
      {/* Cosmic Background */}
      <motion.div
        className="absolute inset-0"
        style={{
          background: 'linear-gradient(135deg, #1e293b, #d946ef, #f97316)',
          backgroundSize: '200% 200%',
        }}
        animate={{ backgroundPosition: ['0% 0%', '100% 100%'] }}
        transition={{ duration: 20, repeat: Infinity }}
      />
      {/* Nebula Effect */}
      <motion.div
        className="absolute inset-0 opacity-20"
        style={{
          background: 'radial-gradient(circle at 70% 30%, #d946ef, #f97316, transparent 50%)',
          filter: 'blur(50px)',
        }}
        variants={nebulaVariants}
        animate="animate"
      />
      {/* Particles and Shooting Stars */}
      {[...Array(10)].map((_, i) => (
        <motion.div
          key={`particle-${i}`}
          className="absolute w-1 h-1 bg-white rounded-full"
          style={{ top: `${Math.random() * 100}%`, left: `${Math.random() * 100}%` }}
          variants={particleVariants}
          animate="animate"
        />
      ))}
      {[...Array(2)].map((_, i) => (
        <motion.div
          key={`star-${i}`}
          className="absolute w-1 h-1 bg-white rounded-full"
          variants={shootingStarVariants}
          animate="animate"
        />
      ))}
      {/* Carousel */}
      <motion.div
        className="flex gap-8"
        ref={carouselRef}
        drag="x"
        dragConstraints={{ left: -(OPS_BENTO_ITEMS.length - 1) * 320, right: 0 }}
        animate={{ x: -activeIndex * 320 }}
        transition={{ type: 'spring', damping: 20 }}
      >
        {OPS_BENTO_ITEMS.map((item, index) => (
          <BentoItem key={item.id} item={item} isActive={index === activeIndex} />
        ))}
      </motion.div>
      {/* Pagination Dots */}
      <div className="absolute bottom-8 flex space-x-3">
        {OPS_BENTO_ITEMS.map((_, index) => (
          <motion.div
            key={index}
            className="w-3 h-3 rounded-full cursor-pointer"
            animate={{ backgroundColor: activeIndex === index ? '#d946ef' : 'rgba(255,255,255,0.2)' }}
            onClick={() => setActiveIndex(index)}
          />
        ))}
      </div>
    </div>
  );
};

// Services Page
const ServicesPage = ({ onScrollRelease }) => {
  const [text, setText] = useState('');
  const fullText = 'We Care, We Create: Ethical, responsible products with humans at the core.';

  useEffect(() => {
    let index = 0;
    const interval = setInterval(() => {
      setText(fullText.slice(0, index));
      index++;
      if (index > fullText.length) {
        clearInterval(interval);
        onScrollRelease();
      }
    }, 50);
    return () => clearInterval(interval);
  }, [onScrollRelease]);

  return (
    <div className="relative w-screen h-screen flex items-center justify-center overflow-hidden">
      {/* Cosmic Background */}
      <motion.div
        className="absolute inset-0"
        style={{
          background: 'linear-gradient(135deg, #2a3a4f, #3a4a5f, #d946ef 10%)',
          backgroundSize: '200% 200%',
        }}
        animate={{ backgroundPosition: ['0% 0%', '100% 100%'] }}
        transition={{ duration: 20, repeat: Infinity }}
      />
      {/* Nebula Effect */}
      <motion.div
        className="absolute inset-0 opacity-20"
        style={{
          background: 'radial-gradient(circle at 50% 50%, #d946ef, transparent 50%)',
          filter: 'blur(50px)',
        }}
        variants={nebulaVariants}
        animate="animate"
      />
      {/* Particles */}
      {[...Array(10)].map((_, i) => (
        <motion.div
          key={`particle-${i}`}
          className="absolute w-1 h-1 bg-white rounded-full"
          style={{ top: `${Math.random() * 100}%`, left: `${Math.random() * 100}%` }}
          variants={particleVariants}
          animate="animate"
        />
      ))}
      {/* Text Reveal */}
      <motion.h2
        className="text-3xl lg:text-4xl font-bold text-white text-center max-w-2xl"
        style={{ textShadow: '0 0 8px #d946ef80' }}
      >
        {text}
        <span className="animate-blink">|</span>
      </motion.h2>
    </div>
  );
};

// Main Component
const HorizontalProductScrollV6 = ({ className = '' }) => {
  const [currentPage, setCurrentPage] = useState(0);
  const [isScrollLocked, setIsScrollLocked] = useState(true);
  const containerRef = useRef(null);

  useEffect(() => {
    const handleWheel = (e) => {
      if (!isScrollLocked) return;
      e.preventDefault();
      const delta = e.deltaY || e.deltaX;
      if (delta > 0 && currentPage < 2) setCurrentPage((prev) => prev + 1);
      else if (delta < 0 && currentPage > 0) setCurrentPage((prev) => prev - 1);
    };

    const handleTouchMove = (e) => {
      if (!isScrollLocked) return;
      e.preventDefault();
    };

    window.addEventListener('wheel', handleWheel, { passive: false });
    window.addEventListener('touchmove', handleTouchMove, { passive: false });

    return () => {
      window.removeEventListener('wheel', handleWheel);
      window.removeEventListener('touchmove', handleTouchMove);
    };
  }, [currentPage, isScrollLocked]);

  const handleScrollRelease = () => {
    if (currentPage === 2) setIsScrollLocked(false);
  };

  return (
    <section className={`relative w-full h-screen overflow-hidden ${className}`} ref={containerRef}>
      {/* Horizontal Scroll Container */}
      <motion.div
        className="flex w-[300vw] h-full"
        animate={{ x: `-${currentPage * 100}vw` }}
        transition={{ type: 'spring', stiffness: 100, damping: 20 }}
      >
        {/* Page 1: AEGIS */}
        <motion.div className="w-screen h-screen" variants={pageVariants} initial="initial" animate="animate" exit="exit">
          <AegisPage />
        </motion.div>
        {/* Page 2: Products */}
        <motion.div className="w-screen h-screen" variants={pageVariants} initial="initial" animate="animate" exit="exit">
          <ProductsPage />
        </motion.div>
        {/* Page 3: Services */}
        <motion.div className="w-screen h-screen" variants={pageVariants} initial="initial" animate="animate" exit="exit">
          <ServicesPage onScrollRelease={handleScrollRelease} />
        </motion.div>
      </motion.div>
      {/* Pagination Dots for Main Pages */}
      <div className="absolute bottom-8 left-1/2 transform -translate-x-1/2 flex space-x-3 z-20">
        {[0, 1, 2].map((index) => (
          <motion.div
            key={index}
            className="w-3 h-3 rounded-full cursor-pointer"
            animate={{ backgroundColor: currentPage === index ? '#d946ef' : 'rgba(255,255,255,0.2)' }}
            onClick={() => setCurrentPage(index)}
          />
        ))}
      </div>
    </section>
  );
};

HorizontalProductScrollV6.displayName = 'HorizontalProductScrollV6';
export const metadata = {
  id: 'horizontal_product_scroll_v6',
  scs: 'SCS5',
  type: 'visual',
  doc: 'contract_horizontal_product_scroll_v6.md',
};

export default HorizontalProductScrollV6;
