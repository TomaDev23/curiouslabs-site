Here are code snippets for all 6 celestial bodies:

**Mars**
```jsx
import React, { useEffect, useState } from 'react';
import CelestialBody from '../CelestialBody';

export const metadata = {
  id: 'mars',
  scs: 'SCS3',
  type: 'visual',
  doc: 'contract_celestial_body.md'
};

export default function Mars({ 
  size = 70, 
  position = { x: 30, y: 25 }, 
  sceneType = 'auto',
  ...props 
}) {
  // Scene-specific styling
  const [sceneStyles, setSceneStyles] = useState({
    opacity: 0.7,
    scale: 1,
    glowIntensity: 0.25,
    glowColor: "rgba(210, 120, 70, 0.25)"
  });
  
  // Red planet with surface features and polar ice caps
  return (
    <CelestialBody
      size={size * sceneStyles.scale}
      position={position}
      glowColor={sceneStyles.glowColor}
      glowSize={size * 0.3 * sceneStyles.glowIntensity * 2}
      {...props}
    >
      {/* Base reddish-orange planet */}
      <div className="absolute inset-0 rounded-full"
        style={{
          background: 'radial-gradient(circle, rgba(210,140,120,1) 0%, rgba(190,95,60,1) 50%, rgba(160,65,45,1) 100%)'
        }}
      ></div>
      
      {/* Surface features */}
      <div className="absolute inset-0 rounded-full"
        style={{
          backgroundImage: `
            radial-gradient(circle at 25% 25%, rgba(130,50,40,0.4) 0%, rgba(130,50,40,0) 25%),
            radial-gradient(circle at 75% 30%, rgba(130,50,40,0.4) 0%, rgba(130,50,40,0) 20%),
            radial-gradient(circle at 35% 65%, rgba(130,50,40,0.5) 0%, rgba(130,50,40,0) 25%),
            radial-gradient(circle at 65% 70%, rgba(130,50,40,0.3) 0%, rgba(130,50,40,0) 15%)
          `
        }}
      ></div>
    </CelestialBody>
  );
}
```

**Moon**
```jsx
import React from 'react';
import CelestialBody from '../CelestialBody';

export const metadata = {
  id: 'moon',
  scs: 'SCS3',
  type: 'visual',
  doc: 'contract_celestial_body.md'
};

export default function Moon({ size = 60, position = { x: 20, y: 30 }, ...props }) {
  return (
    <CelestialBody
      size={size}
      position={position}
      glowColor="rgba(220, 220, 230, 0.2)"
      glowSize={size * 0.2}
      {...props}
    >
      {/* Base gray lunar surface */}
      <div 
        className="absolute inset-0 rounded-full"
        style={{
          background: 'radial-gradient(circle, rgba(220,220,225,1) 0%, rgba(180,180,190,1) 50%, rgba(140,140,150,1) 100%)'
        }}
      ></div>
      
      {/* Crater details */}
      <div 
        className="absolute inset-0 rounded-full"
        style={{
          backgroundImage: `
            radial-gradient(circle at 30% 35%, rgba(200,200,210,0.6) 0%, rgba(200,200,210,0) 15%),
            radial-gradient(circle at 60% 20%, rgba(120,120,130,0.3) 0%, rgba(120,120,130,0) 20%),
            radial-gradient(circle at 75% 60%, rgba(120,120,130,0.4) 0%, rgba(120,120,130,0) 12%),
            radial-gradient(circle at 25% 70%, rgba(120,120,130,0.3) 0%, rgba(120,120,130,0) 15%)
          `
        }}
      ></div>
    </CelestialBody>
  );
}
```

**Jupiter**
```jsx
import React from 'react';
import CelestialBody from '../CelestialBody';

export const metadata = {
  id: 'jupiter',
  scs: 'SCS3',
  type: 'visual',
  doc: 'contract_celestial_body.md'
};

export default function Jupiter({ size = 120, position = { x: 70, y: 40 }, ...props }) {
  return (
    <CelestialBody
      size={size}
      position={position}
      glowColor="rgba(255, 200, 150, 0.2)"
      glowSize={size * 0.25}
      {...props}
    >
      {/* Base planet with cream color */}
      <div 
        className="absolute inset-0 rounded-full"
        style={{
          background: 'radial-gradient(circle, rgba(255,240,220,1) 0%, rgba(230,210,180,1) 100%)'
        }}
      ></div>
      
      {/* Horizontal bands */}
      <div 
        className="absolute inset-0 rounded-full overflow-hidden"
        style={{
          background: `
            linear-gradient(0deg, 
              rgba(200,160,120,0.7) 0%, 
              rgba(200,160,120,0) 5%,
              rgba(230,180,120,0.6) 10%,
              rgba(230,180,120,0) 15%,
              rgba(200,150,100,0.5) 20%,
              rgba(200,150,100,0) 25%,
              rgba(230,190,140,0.6) 30%,
              rgba(230,190,140,0) 35%
            )
          `
        }}
      ></div>
      
      {/* Great Red Spot */}
      <div 
        className="absolute rounded-full"
        style={{
          width: '30%',
          height: '20%',
          top: '40%',
          right: '25%',
          background: 'radial-gradient(ellipse at center, rgba(210,90,60,0.8) 0%, rgba(210,90,60,0) 70%)',
          transform: 'rotate(-10deg)'
        }}
      ></div>
    </CelestialBody>
  );
}
```

**Saturn**
```jsx
import React from 'react';
import CelestialBody from '../CelestialBody';

export const metadata = {
  id: 'saturn',
  scs: 'SCS3',
  type: 'visual',
  doc: 'contract_celestial_body.md'
};

export default function Saturn({ size = 100, position = { x: 50, y: 60 }, ...props }) {
  // Calculate ring dimensions
  const ringWidth = size * 2;
  const ringHeight = size * 0.4;
  
  return (
    <CelestialBody
      size={size}
      position={position}
      glowColor="rgba(255, 240, 200, 0.2)"
      glowSize={size * 0.25}
      {...props}
    >
      {/* Base planet with pale yellow/beige color */}
      <div 
        className="absolute inset-0 rounded-full"
        style={{
          background: 'radial-gradient(circle, rgba(245,235,210,1) 0%, rgba(220,200,160,1) 100%)'
        }}
      ></div>
      
      {/* Rings - behind planet (bottom half) */}
      <div 
        className="absolute rounded-full overflow-hidden"
        style={{
          width: `${ringWidth}px`,
          height: `${ringHeight}px`,
          left: `${(size - ringWidth) / 2}px`,
          top: `${(size - ringHeight) / 2}px`,
          background: 'linear-gradient(180deg, rgba(200,180,140,0) 49%, rgba(200,180,140,0.6) 50%, rgba(230,210,170,0.8) 60%, rgba(245,235,210,0.6) 70%, rgba(255,245,220,0.4) 80%, rgba(255,245,220,0) 90%)',
          transform: 'rotate(-15deg)',
          zIndex: -1
        }}
      ></div>
      
      {/* Rings - in front of planet (top half) */}
      <div 
        className="absolute rounded-full overflow-hidden"
        style={{
          width: `${ringWidth}px`,
          height: `${ringHeight}px`,
          left: `${(size - ringWidth) / 2}px`,
          top: `${(size - ringHeight) / 2}px`,
          background: 'linear-gradient(0deg, rgba(200,180,140,0) 49%, rgba(200,180,140,0.6) 50%, rgba(230,210,170,0.8) 60%, rgba(245,235,210,0.6) 70%, rgba(255,245,220,0.4) 80%, rgba(255,245,220,0) 90%)',
          transform: 'rotate(-15deg)',
          zIndex: 1
        }}
      ></div>
    </CelestialBody>
  );
}
```

**Venus**
```jsx
import React from 'react';
import CelestialBody from '../CelestialBody';

export const metadata = {
  id: 'venus',
  scs: 'SCS3',
  type: 'visual',
  doc: 'contract_celestial_body.md'
};

export default function Venus({ size = 85, position = { x: 40, y: 70 }, ...props }) {
  return (
    <CelestialBody
      size={size}
      position={position}
      glowColor="rgba(255, 250, 200, 0.25)"
      glowSize={size * 0.3}
      {...props}
    >
      {/* Base planet with yellowish-white appearance */}
      <div 
        className="absolute inset-0 rounded-full"
        style={{
          background: 'radial-gradient(circle, rgba(255,250,220,1) 0%, rgba(245,235,190,1) 50%, rgba(235,220,170,1) 100%)'
        }}
      ></div>
      
      {/* Dense swirling cloud patterns */}
      <div 
        className="absolute inset-0 rounded-full animated-layer"
        style={{
          backgroundImage: `
            radial-gradient(ellipse at 30% 30%, rgba(255,255,255,0.2) 0%, rgba(255,255,255,0) 40%),
            radial-gradient(ellipse at 70% 40%, rgba(255,255,255,0.2) 0%, rgba(255,255,255,0) 30%),
            radial-gradient(circle at 25% 60%, rgba(235,225,190,0.3) 0%, rgba(235,225,190,0) 25%)
          `,
          animation: 'venusCloud 120s infinite linear'
        }}
      ></div>
      
      {/* Cloud movement animation */}
      <style jsx>{`
        @keyframes venusCloud {
          0% { transform: rotate(0deg); }
          100% { transform: rotate(360deg); }
        }
      `}</style>
    </CelestialBody>
  );
}
```

**Neptune**
```jsx
import React from 'react';
import CelestialBody from '../CelestialBody';

export const metadata = {
  id: 'neptune',
  scs: 'SCS3',
  type: 'visual',
  doc: 'contract_celestial_body.md'
};

export default function Neptune({ size = 90, position = { x: 80, y: 30 }, ...props }) {
  return (
    <CelestialBody
      size={size}
      position={position}
      glowColor="rgba(100, 190, 255, 0.25)"
      glowSize={size * 0.3}
      {...props}
    >
      {/* Base planet with blue-green coloration */}
      <div 
        className="absolute inset-0 rounded-full"
        style={{
          background: 'radial-gradient(circle, rgba(100,190,255,1) 0%, rgba(70,160,230,1) 50%, rgba(40,130,200,1) 100%)'
        }}
      ></div>
      
      {/* Subtle atmospheric features */}
      <div 
        className="absolute inset-0 rounded-full"
        style={{
          backgroundImage: `
            linear-gradient(0deg, transparent 29%, rgba(120,200,255,0.1) 30%, transparent 31%, transparent 49%, rgba(120,200,255,0.1) 50%, transparent 51%),
            radial-gradient(circle at 70% 60%, rgba(255,255,255,0.2) 0%, rgba(255,255,255,0) 25%),
            radial-gradient(circle at 30% 40%, rgba(150,220,255,0.3) 0%, rgba(150,220,255,0) 30%)
          `
        }}
      ></div>
      
      {/* Great Dark Spot */}
      <div 
        className="absolute rounded-full"
        style={{
          width: '25%',
          height: '15%',
          top: '30%',
          left: '35%',
          background: 'radial-gradient(ellipse at center, rgba(20,100,170,0.8) 0%, rgba(20,100,170,0) 100%)'
        }}
      ></div>
    </CelestialBody>
  );
}
```


