<svg width="800" height="600" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <linearGradient id="fade-gradient" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" stop-color="white" stop-opacity="0.3" />
      <stop offset="100%" stop-color="white" stop-opacity="0.05" />
    </linearGradient>
    
    <pattern id="transition-pattern" width="800" height="600" patternUnits="userSpaceOnUse">
      <!-- Left side (chaotic) -->
      <g opacity="0.2">
        <text x="10" y="20" font-family="monospace" font-size="10" fill="white" opacity="0.3">if (error) { throw new Error(); }</text>
        <text x="40" y="40" font-family="monospace" font-size="8" fill="white" opacity="0.2">{random.choice(options)}</text>
        <text x="15" y="60" font-family="monospace" font-size="9" fill="#ff6666" opacity="0.25">ERROR: undefined is not a function</text>
        <text x="30" y="80" font-family="monospace" font-size="7" fill="white" opacity="0.15">console.error(e.message);</text>
        <text x="5" y="100" font-family="monospace" font-size="12" fill="white" opacity="0.15">!@#$%^</text>
      </g>

      <!-- Middle (transition) -->
      <g opacity="0.15">
        <line x1="200" y1="0" x2="200" y2="600" stroke="url(#fade-gradient)" stroke-width="200" />
        <line x1="400" y1="0" x2="400" y2="600" stroke="url(#fade-gradient)" stroke-width="200" />
        
        <text x="250" y="50" font-family="monospace" font-size="9" fill="white" opacity="0.2">function process(data) {</text>
        <text x="260" y="65" font-family="monospace" font-size="9" fill="white" opacity="0.2">  // Validation</text>
        <text x="260" y="80" font-family="monospace" font-size="9" fill="white" opacity="0.2">  if (!data) return null;</text>
        <text x="260" y="95" font-family="monospace" font-size="9" fill="white" opacity="0.2">  </text>
        <text x="260" y="110" font-family="monospace" font-size="9" fill="white" opacity="0.2">  try {</text>
        <text x="260" y="125" font-family="monospace" font-size="9" fill="white" opacity="0.2">    return transform(data);</text>
        <text x="260" y="140" font-family="monospace" font-size="9" fill="white" opacity="0.2">  } catch (err) {</text>
        <text x="260" y="155" font-family="monospace" font-size="9" fill="white" opacity="0.2">    logger.error(err);</text>
        <text x="260" y="170" font-family="monospace" font-size="9" fill="white" opacity="0.2">    return fallback;</text>
        <text x="260" y="185" font-family="monospace" font-size="9" fill="white" opacity="0.2">  }</text>
        <text x="250" y="200" font-family="monospace" font-size="9" fill="white" opacity="0.2">}</text>
      </g>

      <!-- Right side (organized) -->
      <g opacity="0.1">
        <text x="500" y="50" font-family="monospace" font-size="9" fill="white" opacity="0.15">/**</text>
        <text x="500" y="65" font-family="monospace" font-size="9" fill="white" opacity="0.15"> * Process incoming data safely</text>
        <text x="500" y="80" font-family="monospace" font-size="9" fill="white" opacity="0.15"> * @param {Object} data - Input data</text>
        <text x="500" y="95" font-family="monospace" font-size="9" fill="white" opacity="0.15"> * @returns {Object} - Processed result</text>
        <text x="500" y="110" font-family="monospace" font-size="9" fill="white" opacity="0.15"> */</text>
        <text x="500" y="125" font-family="monospace" font-size="9" fill="white" opacity="0.15">function processData(data) {</text>
        <text x="500" y="140" font-family="monospace" font-size="9" fill="white" opacity="0.15">  if (!isValid(data)) {</text>
        <text x="500" y="155" font-family="monospace" font-size="9" fill="white" opacity="0.15">    return defaultResponse;</text>
        <text x="500" y="170" font-family="monospace" font-size="9" fill="white" opacity="0.15">  }</text>
        <text x="500" y="185" font-family="monospace" font-size="9" fill="white" opacity="0.15">  </text>
        <text x="500" y="200" font-family="monospace" font-size="9" fill="white" opacity="0.15">  return {</text>
        <text x="500" y="215" font-family="monospace" font-size="9" fill="white" opacity="0.15">    result: transform(data),</text>
        <text x="500" y="230" font-family="monospace" font-size="9" fill="white" opacity="0.15">    timestamp: Date.now(),</text>
        <text x="500" y="245" font-family="monospace" font-size="9" fill="white" opacity="0.15">    status: 'success'</text>
        <text x="500" y="260" font-family="monospace" font-size="9" fill="white" opacity="0.15">  };</text>
        <text x="500" y="275" font-family="monospace" font-size="9" fill="white" opacity="0.15">}</text>
      </g>
      
      <!-- Vertical flow lines -->
      <line x1="350" y1="20" x2="350" y2="580" stroke="white" stroke-width="0.5" opacity="0.05" />
      <line x1="450" y1="20" x2="450" y2="580" stroke="white" stroke-width="0.5" opacity="0.05" />
    </pattern>
  </defs>
  
  <!-- Apply the pattern -->
  <rect width="100%" height="100%" fill="url(#transition-pattern)" />
</svg> 